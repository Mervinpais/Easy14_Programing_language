<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Easy14_Programming_Language</name>
    </assembly>
    <members>
        <member name="M:Easy14_Programming_Language.GetVariable.findVar(System.String)">
            <summary>
            It finds the variable name.
            </summary>
            <param name="variableName">The name of the variable you want to find.</param>
        </member>
        <member name="M:Easy14_Programming_Language.updateChecker.checkLatestVersion(System.Boolean)">
            <summary>
            It checks for the latest version of the program.
            </summary>
            <param name="UpdatesWarningsDisabled">If you want to disable the warning message that
            appears when the user is running an outdated version of your app, set this to true.</param>
        </member>
        <member name="M:Easy14_Programming_Language.ThrowErrorMessage.sendErrMessage(System.String,System.String[],System.String)">
            <summary>
            It sends an error message.
            </summary>
            <param name="text">The text to be displayed in the message box.</param>
            <param name="textArray">An array of strings that will be used to replace the placeholders in
            the text string.</param>
            <param name="typeOfError"></param>
        </member>
        <member name="M:Easy14_Programming_Language.If_Loop.interperate(System.String,System.String[],System.String[],System.String,System.Boolean,System.String)">
            <summary>
            This function takes in a string, an array of strings, an array of strings, a string, a
            boolean, and a string.
            </summary>
            <param name="code_part">The code part that is being interperated.</param>
            <param name="lines">The lines of the code</param>
            <param name="textArray">The array of strings that contains the code.</param>
            <param name="fileloc">The location of the file</param>
            <param name="isInAMethod">If the code is in a method, this is true.</param>
            <param name="methodName">The name of the method that the code is in.</param>
        </member>
        <member name="M:Easy14_Programming_Language.Random_RandomRange.interperate(System.String,System.String[],System.String)">
            <summary>
            It takes a string, an array of strings, and a string, and returns a string.
            </summary>
            <param name="code_part">The code that is being interperated</param>
            <param name="textArray">The array of strings that contains the code.</param>
            <param name="fileloc">The location of the file</param>
        </member>
        <member name="M:Easy14_Programming_Language.SDL2_makeWindow.Setup(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Setup all of the SDL resources we'll need to display a window.
            </summary>
        </member>
        <member name="M:Easy14_Programming_Language.SDL2_makeWindow.PollEvents">
            <summary>
            Checks to see if there are any events to be processed.
            </summary>
        </member>
        <member name="M:Easy14_Programming_Language.SDL2_makeWindow.Render(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Renders to the window.
            </summary>
        </member>
        <member name="M:Easy14_Programming_Language.SDL2_makeWindow.CleanUp">
            <summary>
            Clean up the resources that were created.
            </summary>
        </member>
        <member name="M:Easy14_Programming_Language.VariableCode.interperate(System.String,System.String[],System.Int32)">
            <summary>
            It takes a string, an array of strings, and an integer, and does something with them.
            </summary>
            <param name="code_part">The part of the code that is being interperated.</param>
            <param name="lines">The lines of code</param>
            <param name="line_count">The line number of the code_part</param>
        </member>
        <member name="T:Easy14_Programming_Language.Program">
            <summary>
            This class is the main class of the whole app
            </summary>
        </member>
        <member name="F:Easy14_Programming_Language.Program.showCommands">
            <summary>
            showCommands is a variable that shows all the commands that are executed by the user (only when running files, not with the intractive interperater)
            </summary>
        </member>
        <member name="F:Easy14_Programming_Language.Program.previewTheFile">
            <summary>
            previewTheFile is a variable that instead of running the code, lets you preview what the file looks like
            </summary>
        </member>
        <member name="M:Easy14_Programming_Language.Program.compileCode_fromOtherFiles(System.String,System.String[],System.Int32,System.Boolean,System.String)">
            <summary>
            This function is used to compile code from other files
            </summary>
            <param name="fileLoc">The location of the file that is being compiled.</param>
            <param name="textArray">The array of strings that contains the code.</param>
            <param name="lineIDX">The line number of the code that is being compiled.</param>
            <param name="isInAMethod">If the code is in a method, this will be true.</param>
            <param name="methodName">The name of the method that is being called.</param>
        </member>
        <member name="T:ExceptionSender">
            <summary>
            the Class "ExceptionSender"
            </summary>
        </member>
        <member name="M:ExceptionSender.SendException(System.String,System.String[])">
            <summary>
            Allows to send exceptions from other files in the program
            </summary>
            <param name="typeOfException"></param>
            <param name="textArray"></param>
        </member>
    </members>
</doc>
