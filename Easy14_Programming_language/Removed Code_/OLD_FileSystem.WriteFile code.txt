//This is the old code for it, when it was not as a seperate function but in Program.cs

                                            ==================CODE PART====================
                
if (line.StartsWith($"WriteFile("))
{
    bool foundUsing = false;
    string[] someLINEs = null;
    if (textArray == null && fileloc != null) someLINEs = File.ReadAllLines(fileloc);
    else if (textArray != null && fileloc == null) someLINEs = textArray;
    foreach (string x in someLINEs)
    {
        if (x.StartsWith("using"))
        {
            if (x == "using FileSystem;")
            {
                foundUsing = true;
                break;
            }
        }
        if (x == line)
        {
            break;
        }
    }
    if (foundUsing == false)
    {
        Console.ForegroundColor = ConsoleColor.Red;
        Console.WriteLine($"ERROR; The Using 'FileSystem' wasnt referenced to use 'WriteFile' without its reference  (Use FileSystem.ReadFile({quotes}*FilePath*{quotes}) to fix this error :)");
        break;
    }
}
else if (line.StartsWith($"FileSystem.WriteFile(")) { }
string line_ = line;
line_ = line_.TrimStart();

if (line.StartsWith($"FileSystem.WriteFile("))
    line_ = line_.Substring(21);
else if (line.StartsWith($"WriteFile("))
    line_ = line_.Substring(10);

line_ = line_.Substring(0, line_.Length - 2);
string textToPrint = line_;
string[] thePathAndContent = textToPrint.Split(',');
string path = thePathAndContent[0];
string contentInFile = thePathAndContent[1];
if (path.StartsWith('"'.ToString()) && path.EndsWith('"'.ToString()))
{
    try
    {
        path = path.Replace('"'.ToString(), "");
        contentInFile = contentInFile.Replace('"'.ToString(), "");
        contentInFile = contentInFile.TrimStart();
        File.WriteAllText(path, contentInFile);
    }
    catch (Exception e)
    {
        Console.ForegroundColor = ConsoleColor.Red;
        Console.WriteLine("\nERROR; Can't Write To File at the specified location");
        Console.WriteLine("Extra Info is below;\n\n" + e);
        Console.ForegroundColor = ConsoleColor.White;
    }
}
else if (Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @$"\EASY14_Variables_TEMP").Length != 0)
{
    string[] files = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @$"\EASY14_Variables_TEMP");
    foreach (string file in files)
    {
        if (file.Substring(file.LastIndexOf(@"\")).Replace(@"\", "").Replace(".txt", "") == textToPrint.Replace(".txt", ""))
        {
            try
            {
                File.WriteAllText(path, contentInFile);
            }
            catch (Exception e)
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine("\nERROR; Can't Write To File at the specified location");
                Console.WriteLine("Extra Info is below;\n\n" + e);
                Console.ForegroundColor = ConsoleColor.White;
            }
            break;
        }
    }
}