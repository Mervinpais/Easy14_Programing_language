//This is the old code for it, when it was not as a seperate function but in Program.cs

                                            ==================CODE PART====================
                                            
if (line.StartsWith($"print("))
{
    bool foundUsing = false;
    string[] someLINEs = null;
    if (textArray == null && fileloc != null) someLINEs = File.ReadAllLines(fileloc);
    else if (textArray != null && fileloc == null) someLINEs = textArray;
    foreach (string x in someLINEs)
    {
        if (x.StartsWith("using"))
        {
            if (x == "using Console;")
            {
                foundUsing = true;
                break;
            }
        }
        if (x == line)
        {
            break;
        }
    }
    if (foundUsing == false)
    {
        Console.ForegroundColor = ConsoleColor.Red;
        Console.WriteLine($"ERROR; The Using 'Console' wasnt referenced to use 'print' without its reference  (Use Console.print({quotes}*Text To Print*{quotes}) to fix this error :)");
        break;
    }
}
else if (line.StartsWith($"Console.print(")) { }

string line_ = line;
line_ = line_.TrimStart();

if (line.StartsWith($"Console.print("))
    line_ = line_.Substring(14);
else if (line.StartsWith($"print("))
    line_ = line_.Substring(6);

line_ = line_.Substring(0, line_.Length - 2);
string textToPrint = line_;
if (textToPrint == "Time.Now")
{
    Console.WriteLine(DateTime.Now);
}
else if (textToPrint.StartsWith("random.range("))
{
    string text = textToPrint;
    text = text.Replace("random.range(", "").Replace(")", "");
    int number1 = Convert.ToInt32(
        text.Substring(0, text.IndexOf(",")).Replace(",", "")
    );
    int number2 = Convert.ToInt32(
        text.Substring(text.IndexOf(",")).Replace(",", "")
    );
    Random rnd = new Random();
    Console.WriteLine(rnd.Next(number1, number2));
}
else if (textToPrint.StartsWith('"'.ToString()) && textToPrint.EndsWith('"'.ToString()))
{
    Console.WriteLine(textToPrint.Replace('"'.ToString(), ""));
}
else if (Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @$"\EASY14_Variables_TEMP").Length != 0)
{
    string[] files = Directory.GetFiles(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @$"\EASY14_Variables_TEMP");
    foreach (string file in files)
    {
        if (file.Substring(file.LastIndexOf(@"\")).Replace(@"\", "").Replace(".txt", "") == textToPrint.Replace(".txt", ""))
        {
            var contentInFile = File.ReadAllText(file);
            Console.WriteLine(contentInFile.ToString());
            break;
        }
    }
}